name: Python CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.adoc'
      - 'docs/**'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - '**/*.adoc'
      - 'docs/**'
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.svg'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint_type:
    name: Lint + Typecheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements-dev.txt
      - name: Install dev deps only
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt --disable-pip-version-check
      - name: flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: mypy
        run: mypy --ignore-missing-imports .

  test:
    name: Tests + Coverage
    runs-on: ubuntu-latest
    needs: lint_type
    env:
      GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'local-dev-dummy-key' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Install runtime + dev deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt --disable-pip-version-check
      - name: pytest
        run: pytest -q --cov=. --cov-report=xml
      - name: Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}